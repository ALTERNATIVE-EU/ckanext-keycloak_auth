name: Tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      # The CKAN version tag of the Solr and Postgres containers should match
      # the one of the container the tests run on.
      # You can switch this base image with a custom image tailored to your project
      image: openknowledge/ckan-dev:2.9
    services:
      solr:
        image: ckan/ckan-solr-dev:2.9
      postgres:
        image: ckan/ckan-postgres-dev:2.9
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
      # keycloak:
      #   # image: bitnami/keycloak:16.1.1-debian-10-r85
      #   image: quay.io/keycloak/keycloak:22.0.0
      #   env:
      #     KC_HEALTH_ENABLED: true
      #     KC_METRICS_ENABLED: true
      #     KEYCLOAK_ADMIN: admin
      #     KEYCLOAK_ADMIN_PASSWORD: admin
      #   options: --entrypoint "/opt/keycloak/bin/kc.sh" start-dev

    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
    - uses: actions/checkout@v3

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2
    #   with:
    #     buildkitd-flags: --debug

    - name: Install docker
      run: |
        apt update
        apt install apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
        apt-cache policy docker-ce
        apt install docker-ce

    - name: Install requirements
      # Install any extra requirements your extension has here (dev requirements, other extensions etc)
      run: |
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .

    - name: start Kecloak container
      run: |
        docker create --name keycloak --label keycloak --network-alias keycloak --entrypoint "/opt/keycloak/bin/kc.sh" -e "KC_HEALTH_ENABLED=true" -e "KC_METRICS_ENABLED=true" -e "KEYCLOAK_ADMIN=admin" -e "KEYCLOAK_ADMIN_PASSWORD=admin" -e GITHUB_ACTIONS=true -e CI=true quay.io/keycloak/keycloak:22.0.0 start-dev
        docker start keycloak
        docker network ls

    - name: check keycloak
      run: |
        telnet keycloak 8080
        curl http://keycloak:8080/

    - name: Setup extension
      # Extra initialization steps
      run: |
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

        ckan -c test.ini db init

    - name: Run tests
      run: pytest --ckan-ini=test.ini --cov=ckanext.keycloak_auth --disable-warnings ckanext/keycloak_auth

